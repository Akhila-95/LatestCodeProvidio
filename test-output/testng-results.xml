<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="64" passed="43" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-23T18:15:44 IST" name="Providio Regression Test" finished-at="2024-01-23T18:28:15 IST" duration-ms="751454">
    <groups>
      <group name="regression">
        <method signature="launchBrowsering.verifyHomePageLaunching()[pri:0, instance:browser.launchBrowsering@54c622a7]" name="verifyHomePageLaunching" class="browser.launchBrowsering"/>
        <method signature="CheckOutPage2Test.verifyingAllErrorsInShippingForm()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingAllErrorsInShippingForm" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheAddressError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheAddressError" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheErrorsInFirstName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheErrorsInFirstName" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheErrorsInLastName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheErrorsInLastName" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingWithValidShippingAddress()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingWithValidShippingAddress" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingphoneNumberError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingphoneNumberError" class="testScripts.CheckOutPage2Test"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="launchBrowsering.verifyHomePageLaunching()[pri:0, instance:browser.launchBrowsering@54c622a7]" name="verifyHomePageLaunching" class="browser.launchBrowsering"/>
        <method signature="CheckOutPage2Test.verifyingAllErrorsInShippingForm()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingAllErrorsInShippingForm" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheAddressError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheAddressError" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheErrorsInFirstName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheErrorsInFirstName" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingTheErrorsInLastName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingTheErrorsInLastName" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingWithValidShippingAddress()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingWithValidShippingAddress" class="testScripts.CheckOutPage2Test"/>
        <method signature="CheckOutPage2Test.verifyingphoneNumberError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" name="verifyingphoneNumberError" class="testScripts.CheckOutPage2Test"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-01-23T18:15:44 IST" name="SmokeTest" finished-at="2024-01-23T18:28:15 IST" duration-ms="751454">
      <class name="browser.launchBrowsering">
        <test-method is-config="true" signature="setUpforReport()[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:15:37 IST" name="setUpforReport" finished-at="2024-01-23T18:15:44 IST" duration-ms="6483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpforReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:15:44 IST" name="setUp" finished-at="2024-01-23T18:15:46 IST" duration-ms="2057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:15:46 IST" name="afterClass" finished-at="2024-01-23T18:15:46 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void browser.launchBrowsering.verifyHomePageLaunching() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyHomePageLaunching()[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:15:46 IST" name="verifyHomePageLaunching" finished-at="2024-01-23T18:15:51 IST" duration-ms="5148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomePageLaunching -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:15:51 IST" name="afterMethod" finished-at="2024-01-23T18:15:51 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomePageLaunching status=SUCCESS method=launchBrowsering.verifyHomePageLaunching()[pri:0, instance:browser.launchBrowsering@54c622a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:browser.launchBrowsering@54c622a7]" started-at="2024-01-23T18:28:15 IST" name="tearDown" finished-at="2024-01-23T18:28:24 IST" duration-ms="8446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- browser.launchBrowsering -->
      <class name="testScripts.LogOutTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.LogOutTest@65afeb6d]" started-at="2024-01-23T18:20:13 IST" name="setUp" finished-at="2024-01-23T18:20:15 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LogOutTest@65afeb6d]" started-at="2024-01-23T18:20:15 IST" name="afterClass" finished-at="2024-01-23T18:20:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LogOutTest.verifyLogout() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyLogout()[pri:0, instance:testScripts.LogOutTest@65afeb6d]" started-at="2024-01-23T18:20:15 IST" name="verifyLogout" finished-at="2024-01-23T18:20:28 IST" duration-ms="12590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogout -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LogOutTest@65afeb6d]" started-at="2024-01-23T18:20:28 IST" name="afterMethod" finished-at="2024-01-23T18:20:28 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogout status=SUCCESS method=LogOutTest.verifyLogout()[pri:0, instance:testScripts.LogOutTest@65afeb6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.LogOutTest -->
      <class name="testScripts.CreateAccountPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:17:59 IST" name="setUp" finished-at="2024-01-23T18:18:01 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailAndConfirmEmail()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:18:01 IST" name="verifyEmailAndConfirmEmail" finished-at="2024-01-23T18:18:48 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="46852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailAndConfirmEmail -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:18:01 IST" name="afterClass" finished-at="2024-01-23T18:18:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.CreateAccountPageTest.verifyEmailAndConfirmEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:18:48 IST" name="afterMethod" finished-at="2024-01-23T18:18:48 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailAndConfirmEmail status=SUCCESS method=CreateAccountPageTest.verifyEmailAndConfirmEmail()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:18:48 IST" name="afterClass" finished-at="2024-01-23T18:18:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.CreateAccountPageTest.verifyPasswordMismatch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyPasswordMismatch()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:18:48 IST" name="verifyPasswordMismatch" finished-at="2024-01-23T18:19:09 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="21121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordMismatch -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:09 IST" name="afterMethod" finished-at="2024-01-23T18:19:09 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordMismatch status=SUCCESS method=CreateAccountPageTest.verifyPasswordMismatch()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:09 IST" name="afterClass" finished-at="2024-01-23T18:19:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.CreateAccountPageTest.verifyPhoneNumError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyPhoneNumError()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:09 IST" name="verifyPhoneNumError" finished-at="2024-01-23T18:19:30 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="21008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPhoneNumError -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:30 IST" name="afterMethod" finished-at="2024-01-23T18:19:30 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPhoneNumError status=SUCCESS method=CreateAccountPageTest.verifyPhoneNumError()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyEmailformatError()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:30 IST" name="verifyEmailformatError" finished-at="2024-01-23T18:19:51 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="20984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailformatError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:30 IST" name="afterClass" finished-at="2024-01-23T18:19:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.CreateAccountPageTest.verifyEmailformatError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:51 IST" name="afterMethod" finished-at="2024-01-23T18:19:51 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailformatError status=SUCCESS method=CreateAccountPageTest.verifyEmailformatError()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:51 IST" name="afterClass" finished-at="2024-01-23T18:19:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.CreateAccountPageTest.verifyCreateAccountWithValidCredentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyCreateAccountWithValidCredentials()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:19:51 IST" name="verifyCreateAccountWithValidCredentials" finished-at="2024-01-23T18:20:13 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="22374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateAccountWithValidCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5]" started-at="2024-01-23T18:20:13 IST" name="afterMethod" finished-at="2024-01-23T18:20:13 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateAccountWithValidCredentials status=SUCCESS method=CreateAccountPageTest.verifyCreateAccountWithValidCredentials()[pri:0, instance:testScripts.CreateAccountPageTest@22d322f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.CreateAccountPageTest -->
      <class name="testScripts.LoginPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:16:53 IST" name="setUp" finished-at="2024-01-23T18:16:55 IST" duration-ms="2012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:16:55 IST" name="afterClass" finished-at="2024-01-23T18:16:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginFailureWithIncorrectCredentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="VerifyingLoginFailureWithIncorrectCredentials()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:16:55 IST" name="VerifyingLoginFailureWithIncorrectCredentials" finished-at="2024-01-23T18:17:16 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="20562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginFailureWithIncorrectCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:16 IST" name="afterMethod" finished-at="2024-01-23T18:17:16 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginFailureWithIncorrectCredentials status=SUCCESS method=LoginPageTest.VerifyingLoginFailureWithIncorrectCredentials()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyingLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:16 IST" name="VerifyingLoginFailureWithEmptyEmailAndPassword" finished-at="2024-01-23T18:17:21 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="5230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginFailureWithEmptyEmailAndPassword -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:16 IST" name="afterClass" finished-at="2024-01-23T18:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginFailureWithEmptyEmailAndPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:21 IST" name="afterMethod" finished-at="2024-01-23T18:17:21 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginFailureWithEmptyEmailAndPassword status=SUCCESS method=LoginPageTest.VerifyingLoginFailureWithEmptyEmailAndPassword()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyingLoginFailureWithInvalidEmailFormat()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:21 IST" name="VerifyingLoginFailureWithInvalidEmailFormat" finished-at="2024-01-23T18:17:30 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginFailureWithInvalidEmailFormat -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:21 IST" name="afterClass" finished-at="2024-01-23T18:17:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginFailureWithInvalidEmailFormat() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:30 IST" name="afterMethod" finished-at="2024-01-23T18:17:30 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginFailureWithInvalidEmailFormat status=SUCCESS method=LoginPageTest.VerifyingLoginFailureWithInvalidEmailFormat()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyingLoginFailureWithEmptyEmail()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:30 IST" name="VerifyingLoginFailureWithEmptyEmail" finished-at="2024-01-23T18:17:40 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginFailureWithEmptyEmail -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:30 IST" name="afterClass" finished-at="2024-01-23T18:17:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginFailureWithEmptyEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:40 IST" name="afterMethod" finished-at="2024-01-23T18:17:40 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginFailureWithEmptyEmail status=SUCCESS method=LoginPageTest.VerifyingLoginFailureWithEmptyEmail()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyingLoginFailureWithEmptyPassword()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:40 IST" name="VerifyingLoginFailureWithEmptyPassword" finished-at="2024-01-23T18:17:49 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginFailureWithEmptyPassword -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:40 IST" name="afterClass" finished-at="2024-01-23T18:17:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginFailureWithEmptyPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:49 IST" name="afterMethod" finished-at="2024-01-23T18:17:49 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginFailureWithEmptyPassword status=SUCCESS method=LoginPageTest.VerifyingLoginFailureWithEmptyPassword()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyingLoginWithValidCredentials()[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:49 IST" name="VerifyingLoginWithValidCredentials" finished-at="2024-01-23T18:17:59 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyingLoginWithValidCredentials -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:49 IST" name="afterClass" finished-at="2024-01-23T18:17:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.LoginPageTest.VerifyingLoginWithValidCredentials() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.LoginPageTest@630bf683]" started-at="2024-01-23T18:17:59 IST" name="afterMethod" finished-at="2024-01-23T18:17:59 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyingLoginWithValidCredentials status=SUCCESS method=LoginPageTest.VerifyingLoginWithValidCredentials()[pri:0, instance:testScripts.LoginPageTest@630bf683] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.LoginPageTest -->
      <class name="testScripts.FooterPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:05 IST" name="setUp" finished-at="2024-01-23T18:16:07 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyingResourceFooterLinks()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:07 IST" name="verifyingResourceFooterLinks" finished-at="2024-01-23T18:16:11 IST" duration-ms="4597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingResourceFooterLinks -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:07 IST" name="afterClass" finished-at="2024-01-23T18:16:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifyingResourceFooterLinks() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:11 IST" name="afterMethod" finished-at="2024-01-23T18:16:11 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingResourceFooterLinks status=SUCCESS method=FooterPageTest.verifyingResourceFooterLinks()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyinginvalidEmailInEmailSignUpBox()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:11 IST" name="verifyinginvalidEmailInEmailSignUpBox" finished-at="2024-01-23T18:16:15 IST" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyinginvalidEmailInEmailSignUpBox -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:11 IST" name="afterClass" finished-at="2024-01-23T18:16:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifyinginvalidEmailInEmailSignUpBox() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:15 IST" name="afterMethod" finished-at="2024-01-23T18:16:15 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyinginvalidEmailInEmailSignUpBox status=SUCCESS method=FooterPageTest.verifyinginvalidEmailInEmailSignUpBox()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:15 IST" name="afterClass" finished-at="2024-01-23T18:16:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifyErrorMsgsInGiftCard() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyErrorMsgsInGiftCard()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:15 IST" name="verifyErrorMsgsInGiftCard" finished-at="2024-01-23T18:16:22 IST" duration-ms="7616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMsgsInGiftCard -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:22 IST" name="afterMethod" finished-at="2024-01-23T18:16:22 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyErrorMsgsInGiftCard status=SUCCESS method=FooterPageTest.verifyErrorMsgsInGiftCard()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:22 IST" name="afterClass" finished-at="2024-01-23T18:16:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifytheErrorsFromName_Recipients_confirmRecipientEMail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifytheErrorsFromName_Recipients_confirmRecipientEMail()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:22 IST" name="verifytheErrorsFromName_Recipients_confirmRecipientEMail" finished-at="2024-01-23T18:16:31 IST" duration-ms="8547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytheErrorsFromName_Recipients_confirmRecipientEMail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:31 IST" name="afterMethod" finished-at="2024-01-23T18:16:31 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytheErrorsFromName_Recipients_confirmRecipientEMail status=SUCCESS method=FooterPageTest.verifytheErrorsFromName_Recipients_confirmRecipientEMail()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyTheErrorsRecipientEmailAndConfirmEmail()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:31 IST" name="verifyTheErrorsRecipientEmailAndConfirmEmail" finished-at="2024-01-23T18:16:41 IST" duration-ms="10299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheErrorsRecipientEmailAndConfirmEmail -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:31 IST" name="afterClass" finished-at="2024-01-23T18:16:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifyTheErrorsRecipientEmailAndConfirmEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:41 IST" name="afterMethod" finished-at="2024-01-23T18:16:41 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheErrorsRecipientEmailAndConfirmEmail status=SUCCESS method=FooterPageTest.verifyTheErrorsRecipientEmailAndConfirmEmail()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyErrorsForConfirmMail()[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:41 IST" name="verifyErrorsForConfirmMail" finished-at="2024-01-23T18:16:53 IST" duration-ms="12253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorsForConfirmMail -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:41 IST" name="afterClass" finished-at="2024-01-23T18:16:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FooterPageTest.verifyErrorsForConfirmMail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FooterPageTest@640cc04b]" started-at="2024-01-23T18:16:53 IST" name="afterMethod" finished-at="2024-01-23T18:16:53 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyErrorsForConfirmMail status=SUCCESS method=FooterPageTest.verifyErrorsForConfirmMail()[pri:0, instance:testScripts.FooterPageTest@640cc04b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.FooterPageTest -->
      <class name="testScripts.FindAStoreTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.FindAStoreTest@310ed6b4]" started-at="2024-01-23T18:15:51 IST" name="setUp" finished-at="2024-01-23T18:15:53 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.FindAStoreTest@310ed6b4]" started-at="2024-01-23T18:15:53 IST" name="afterClass" finished-at="2024-01-23T18:15:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.FindAStoreTest.verifyFindAStore() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyFindAStore()[pri:0, instance:testScripts.FindAStoreTest@310ed6b4]" started-at="2024-01-23T18:15:53 IST" name="verifyFindAStore" finished-at="2024-01-23T18:16:05 IST" duration-ms="11332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFindAStore -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.FindAStoreTest@310ed6b4]" started-at="2024-01-23T18:16:05 IST" name="afterMethod" finished-at="2024-01-23T18:16:05 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFindAStore status=SUCCESS method=FindAStoreTest.verifyFindAStore()[pri:0, instance:testScripts.FindAStoreTest@310ed6b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.FindAStoreTest -->
      <class name="testScripts.CheckOutPage2Test">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:20:28 IST" name="setUp" finished-at="2024-01-23T18:20:30 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:20:30 IST" name="afterClass" finished-at="2024-01-23T18:20:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingTheCustomerInfoInCheckoutPage2() throws java.lang.InterruptedException,java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingTheCustomerInfoInCheckoutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:20:30 IST" name="verifyingTheCustomerInfoInCheckoutPage2" finished-at="2024-01-23T18:21:49 IST" duration-ms="78928" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //div[@class='alert alert-success add-to-basket-alert text-center'] (tried for 30 second(s) with 1000 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //div[@class='alert alert-success add-to-basket-alert text-center'] (tried for 30 second(s) with 1000 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:261)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at validations.ProductListingPageValidations.validatingProductisAddtoCart(ProductListingPageValidations.java:123)
at tasks.ProductListingPageTasks.quickShop(ProductListingPageTasks.java:75)
at tasks.HomePageTasks.miniCartBtnClick(HomePageTasks.java:97)
at tasks.ViewCartPageTasks.viewCartpage(ViewCartPageTasks.java:40)
at tasks.CheckOutPageTasks.CheckOutPageLoaded(CheckOutPageTasks.java:33)
at tasks.CheckOutPageTasks.GuestMailCheckOut(CheckOutPageTasks.java:39)
at tasks.CheckOutPage2Tasks.checkOutPage2(CheckOutPage2Tasks.java:26)
at tasks.CheckOutPage2Tasks.getCutomerInfo(CheckOutPage2Tasks.java:31)
at testScripts.CheckOutPage2Test.verifyingTheCustomerInfoInCheckoutPage2(CheckOutPage2Test.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingTheCustomerInfoInCheckoutPage2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:21:49 IST" name="afterMethod" finished-at="2024-01-23T18:21:49 IST" duration-ms="535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingTheCustomerInfoInCheckoutPage2 status=FAILURE method=CheckOutPage2Test.verifyingTheCustomerInfoInCheckoutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingEditEmailInCheckoutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:21:49 IST" name="verifyingEditEmailInCheckoutPage2" finished-at="2024-01-23T18:23:19 IST" duration-ms="89695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingEditEmailInCheckoutPage2 -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:21:49 IST" name="afterClass" finished-at="2024-01-23T18:21:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingEditEmailInCheckoutPage2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:23:19 IST" name="afterMethod" finished-at="2024-01-23T18:23:19 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingEditEmailInCheckoutPage2 status=SUCCESS method=CheckOutPage2Test.verifyingEditEmailInCheckoutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingPaginationOfProductsInCheckOutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:23:19 IST" name="verifyingPaginationOfProductsInCheckOutPage2" finished-at="2024-01-23T18:24:39 IST" duration-ms="80280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingPaginationOfProductsInCheckOutPage2 -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:23:19 IST" name="afterClass" finished-at="2024-01-23T18:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingPaginationOfProductsInCheckOutPage2() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="afterMethod" finished-at="2024-01-23T18:24:39 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingPaginationOfProductsInCheckOutPage2 status=SUCCESS method=CheckOutPage2Test.verifyingPaginationOfProductsInCheckOutPage2()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="afterClass" finished-at="2024-01-23T18:24:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page" finished-at="2024-01-23T18:24:39 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="afterMethod" finished-at="2024-01-23T18:24:39 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page status=SUCCESS method=CheckOutPage2Test.verifyingNextPaymentButtonDisplayInCheckOutPage2Tasks_Page()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page" finished-at="2024-01-23T18:24:40 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:39 IST" name="afterClass" finished-at="2024-01-23T18:24:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:40 IST" name="afterMethod" finished-at="2024-01-23T18:24:40 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page status=SUCCESS method=CheckOutPage2Test.verifyingEtgLogoDisplayInCheckOutPage2Tasks_Page()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingAllErrorsInShippingForm()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:40 IST" name="verifyingAllErrorsInShippingForm" finished-at="2024-01-23T18:24:44 IST" duration-ms="4334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingAllErrorsInShippingForm -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:40 IST" name="afterClass" finished-at="2024-01-23T18:24:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingAllErrorsInShippingForm() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:44 IST" name="afterMethod" finished-at="2024-01-23T18:24:44 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingAllErrorsInShippingForm status=SUCCESS method=CheckOutPage2Test.verifyingAllErrorsInShippingForm()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:44 IST" name="afterClass" finished-at="2024-01-23T18:24:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingTheErrorsInFirstName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingTheErrorsInFirstName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:44 IST" name="verifyingTheErrorsInFirstName" finished-at="2024-01-23T18:24:59 IST" duration-ms="14683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingTheErrorsInFirstName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:59 IST" name="afterMethod" finished-at="2024-01-23T18:24:59 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingTheErrorsInFirstName status=SUCCESS method=CheckOutPage2Test.verifyingTheErrorsInFirstName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:59 IST" name="afterClass" finished-at="2024-01-23T18:24:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingTheErrorsInLastName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingTheErrorsInLastName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:24:59 IST" name="verifyingTheErrorsInLastName" finished-at="2024-01-23T18:25:13 IST" duration-ms="14581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingTheErrorsInLastName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:13 IST" name="afterMethod" finished-at="2024-01-23T18:25:13 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingTheErrorsInLastName status=SUCCESS method=CheckOutPage2Test.verifyingTheErrorsInLastName()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingTheAddressError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:13 IST" name="verifyingTheAddressError" finished-at="2024-01-23T18:25:28 IST" duration-ms="14522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingTheAddressError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:13 IST" name="afterClass" finished-at="2024-01-23T18:25:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingTheAddressError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:28 IST" name="afterMethod" finished-at="2024-01-23T18:25:28 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingTheAddressError status=SUCCESS method=CheckOutPage2Test.verifyingTheAddressError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:28 IST" name="afterClass" finished-at="2024-01-23T18:25:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingphoneNumberError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingphoneNumberError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:28 IST" name="verifyingphoneNumberError" finished-at="2024-01-23T18:25:42 IST" duration-ms="14582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingphoneNumberError -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:42 IST" name="afterMethod" finished-at="2024-01-23T18:25:42 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingphoneNumberError status=SUCCESS method=CheckOutPage2Test.verifyingphoneNumberError()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingWithValidShippingAddress()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:42 IST" name="verifyingWithValidShippingAddress" finished-at="2024-01-23T18:25:55 IST" duration-ms="12652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingWithValidShippingAddress -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:42 IST" name="afterClass" finished-at="2024-01-23T18:25:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.CheckOutPage2Test.verifyingWithValidShippingAddress() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.CheckOutPage2Test@6723610b]" started-at="2024-01-23T18:25:55 IST" name="afterMethod" finished-at="2024-01-23T18:25:55 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingWithValidShippingAddress status=SUCCESS method=CheckOutPage2Test.verifyingWithValidShippingAddress()[pri:0, instance:testScripts.CheckOutPage2Test@6723610b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.CheckOutPage2Test -->
      <class name="testScripts.PaymentPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:25:55 IST" name="setUp" finished-at="2024-01-23T18:25:57 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:25:57 IST" name="afterClass" finished-at="2024-01-23T18:25:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.PaymentPageTest.verifyingEditShippingAddress() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingEditShippingAddress()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:25:57 IST" name="verifyingEditShippingAddress" finished-at="2024-01-23T18:26:26 IST" duration-ms="28973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingEditShippingAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:26 IST" name="afterMethod" finished-at="2024-01-23T18:26:26 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingEditShippingAddress status=SUCCESS method=PaymentPageTest.verifyingEditShippingAddress()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingEditCustomerInfoFromCop3()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:26 IST" name="verifyingEditCustomerInfoFromCop3" finished-at="2024-01-23T18:26:49 IST" duration-ms="22552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingEditCustomerInfoFromCop3 -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:26 IST" name="afterClass" finished-at="2024-01-23T18:26:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.PaymentPageTest.verifyingEditCustomerInfoFromCop3() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:49 IST" name="afterMethod" finished-at="2024-01-23T18:26:49 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingEditCustomerInfoFromCop3 status=SUCCESS method=PaymentPageTest.verifyingEditCustomerInfoFromCop3()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingGiftMessage()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:49 IST" name="verifyingGiftMessage" finished-at="2024-01-23T18:27:05 IST" duration-ms="16450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingGiftMessage -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:26:49 IST" name="afterClass" finished-at="2024-01-23T18:26:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testScripts.PaymentPageTest.verifyingGiftMessage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:05 IST" name="afterMethod" finished-at="2024-01-23T18:27:05 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingGiftMessage status=SUCCESS method=PaymentPageTest.verifyingGiftMessage()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingAllTheErrorsInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:05 IST" name="verifyingAllTheErrorsInCreditCard" finished-at="2024-01-23T18:27:07 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="2190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingAllTheErrorsInCreditCard -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:05 IST" name="afterClass" finished-at="2024-01-23T18:27:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingAllTheErrorsInCreditCard() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:07 IST" name="afterMethod" finished-at="2024-01-23T18:27:07 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingAllTheErrorsInCreditCard status=SUCCESS method=PaymentPageTest.verifyingAllTheErrorsInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:07 IST" name="afterClass" finished-at="2024-01-23T18:27:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCvvAndExpErrorInCreditCard() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingCvvAndExpErrorInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:07 IST" name="verifyingCvvAndExpErrorInCreditCard" finished-at="2024-01-23T18:27:10 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="2789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCvvAndExpErrorInCreditCard -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:10 IST" name="afterMethod" finished-at="2024-01-23T18:27:10 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCvvAndExpErrorInCreditCard status=SUCCESS method=PaymentPageTest.verifyingCvvAndExpErrorInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:10 IST" name="afterClass" finished-at="2024-01-23T18:27:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCvvErrorInCreditCard() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="verifyingCvvErrorInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:10 IST" name="verifyingCvvErrorInCreditCard" finished-at="2024-01-23T18:27:12 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="2101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCvvErrorInCreditCard -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:12 IST" name="afterMethod" finished-at="2024-01-23T18:27:12 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCvvErrorInCreditCard status=SUCCESS method=PaymentPageTest.verifyingCvvErrorInCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditcardNumberInValidError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:12 IST" name="verifyingCreditcardNumberInValidError" finished-at="2024-01-23T18:27:20 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="8372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditcardNumberInValidError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:12 IST" name="afterClass" finished-at="2024-01-23T18:27:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditcardNumberInValidError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:20 IST" name="afterMethod" finished-at="2024-01-23T18:27:20 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditcardNumberInValidError status=SUCCESS method=PaymentPageTest.verifyingCreditcardNumberInValidError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditCardExpDateInValid()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:20 IST" name="verifyingCreditCardExpDateInValid" finished-at="2024-01-23T18:27:30 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditCardExpDateInValid -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:20 IST" name="afterClass" finished-at="2024-01-23T18:27:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditCardExpDateInValid() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:30 IST" name="afterMethod" finished-at="2024-01-23T18:27:30 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditCardExpDateInValid status=SUCCESS method=PaymentPageTest.verifyingCreditCardExpDateInValid()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditCardNumberInCompleteError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:30 IST" name="verifyingCreditCardNumberInCompleteError" finished-at="2024-01-23T18:27:39 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditCardNumberInCompleteError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:30 IST" name="afterClass" finished-at="2024-01-23T18:27:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditCardNumberInCompleteError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:39 IST" name="afterMethod" finished-at="2024-01-23T18:27:39 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditCardNumberInCompleteError status=SUCCESS method=PaymentPageTest.verifyingCreditCardNumberInCompleteError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditCardInCompleteExpYearError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:39 IST" name="verifyingCreditCardInCompleteExpYearError" finished-at="2024-01-23T18:27:49 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditCardInCompleteExpYearError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:39 IST" name="afterClass" finished-at="2024-01-23T18:27:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditCardInCompleteExpYearError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:49 IST" name="afterMethod" finished-at="2024-01-23T18:27:49 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditCardInCompleteExpYearError status=SUCCESS method=PaymentPageTest.verifyingCreditCardInCompleteExpYearError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditCardInCompleteCvvError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:49 IST" name="verifyingCreditCardInCompleteCvvError" finished-at="2024-01-23T18:27:58 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="9403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditCardInCompleteCvvError -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:49 IST" name="afterClass" finished-at="2024-01-23T18:27:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditCardInCompleteCvvError() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:58 IST" name="afterMethod" finished-at="2024-01-23T18:27:58 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditCardInCompleteCvvError status=SUCCESS method=PaymentPageTest.verifyingCreditCardInCompleteCvvError()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingAddnewCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:58 IST" name="verifyingAddnewCreditCard" finished-at="2024-01-23T18:28:00 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="2072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingAddnewCreditCard -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:27:58 IST" name="afterClass" finished-at="2024-01-23T18:27:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingAddnewCreditCard() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:28:00 IST" name="afterMethod" finished-at="2024-01-23T18:28:00 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingAddnewCreditCard status=SUCCESS method=PaymentPageTest.verifyingAddnewCreditCard()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyingCreditcardWithValidDetails()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:28:00 IST" name="verifyingCreditcardWithValidDetails" finished-at="2024-01-23T18:28:15 IST" depends-on-methods="browser.launchBrowsering.verifyHomePageLaunching" duration-ms="14979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingCreditcardWithValidDetails -->
        <test-method is-config="true" signature="afterClass(java.lang.reflect.Method)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:28:00 IST" name="afterClass" finished-at="2024-01-23T18:28:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.PaymentPageTest.verifyingCreditcardWithValidDetails() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.PaymentPageTest@7ab1127c]" started-at="2024-01-23T18:28:15 IST" name="afterMethod" finished-at="2024-01-23T18:28:15 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyingCreditcardWithValidDetails status=SUCCESS method=PaymentPageTest.verifyingCreditcardWithValidDetails()[pri:0, instance:testScripts.PaymentPageTest@7ab1127c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testScripts.PaymentPageTest -->
    </test> <!-- SmokeTest -->
  </suite> <!-- Providio Regression Test -->
</testng-results>
